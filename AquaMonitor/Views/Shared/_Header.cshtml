@inject AquaMonitor.Data.Models.IGlobalState globals
@inject AquaMonitor.Data.Context.AquaDbContext dbContext
@using System.Linq
@functions{
    private static IEnumerable<AquaMonitor.Data.Models.HistoryRecord> cachedResult = null;
    public IEnumerable<AquaMonitor.Data.Models.HistoryRecord> yesterday
    {
        get
        {
            if (cachedResult == null)
                cachedResult = dbContext.GetHistory(DateTimeOffset.Parse(DateTime.Now.AddDays(-1).ToString("MM/dd/yyyy") + " 00:00:00"), DateTimeOffset.Parse(DateTime.Now.AddDays(-1).ToString("MM/dd/yyyy") + " 23:59:59"));
            return cachedResult;
        }
    }
    public double yesterdayTempF
    {
        get
        {
            if (yesterday.Any())
            {
                var subset = yesterday.Where(t => t.Created.Hour >= (DateTime.Now.Hour - 1) && t.Created.Hour <= (DateTime.Now.Hour + 1));
                if (subset.Any())
                    return subset.Max(t => t.TempF);
            }
            return globals.TemperatureF;
        }
    }
    public double yesterdayTempC
    {
        get
        {
            if (yesterday.Any())
            {
                var subset = yesterday.Where(t => t.Created.Hour >= (DateTime.Now.Hour - 1) && t.Created.Hour <= (DateTime.Now.Hour + 1));
                if (subset.Any())
                    return subset.Max(t => t.TempC);
            }
            return globals.TemperatureC;
        }
    }
    public double yesterdayHumid
    {
        get
        {
            if (yesterday.Any())
            {
                var subset = yesterday.Where(t => t.Created.Hour >= (DateTime.Now.Hour - 1) && t.Created.Hour <= (DateTime.Now.Hour + 1));
                if (subset.Any())
                    return subset.Max(t => t.Humidity);
            }
            return globals.Humidity;
        }
    }
}
<div class="header bg-gradient-primary pb-8 pt-5 pt-md-8">
    <div class="container-fluid">
        <div class="header-body">
            <!-- Card stats -->
            <div class="row">
                <div class="col-xl-3 col-lg-6">
                    <div class="card card-stats mb-4 mb-xl-0">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <h5 class="card-title text-uppercase text-muted mb-0">Temperature</h5>
                                    <span class="h2 font-weight-bold mb-0">
                                        @globals.TemperatureF.ToString("##0.0")&#176;F
                                        <span class="h2 font-weight-bold mb-0 float-right">@globals.TemperatureC.ToString("##0.00")&#176;C</span>
                                    </span>
                                </div>
                                <div class="col-auto">
                                    <div class="icon icon-shape bg-danger text-white rounded-circle shadow">
                                        <i class="fas fa-chart-bar"></i>
                                    </div>
                                </div>
                            </div>
                            <p class="mt-3 mb-0 text-muted text-sm">
                                <span class="text-@(yesterdayTempF > globals.TemperatureF ? "danger" : "success") mr-2"><i class="fa @(yesterdayTempF > globals.TemperatureF ? "fa-arrow-down" : "fa-arrow-up")"></i>@Math.Abs(yesterdayTempF - globals.TemperatureF).ToString("##0.00") &#176;F</span>
                                <span class="text-nowrap">@(yesterdayTempF > globals.TemperatureF ? "cooler" : "warmer") than yesterday</span>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-lg-6">
                    <div class="card card-stats mb-4 mb-xl-0">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <h5 class="card-title text-uppercase text-muted mb-0">Humidity</h5>
                                    <span class="h2 font-weight-bold mb-0">
                                        @globals.Humidity.ToString("##0.0") %
                                    </span>
                                </div>
                                <div class="col-auto">
                                    <div class="icon icon-shape bg-warning text-white rounded-circle shadow">
                                        <i class="fas fa-percent"></i>
                                    </div>
                                </div>
                            </div>
                            <p class="mt-3 mb-0 text-muted text-sm">
                                <span class="text-@(yesterdayHumid > globals.Humidity ? "danger" : "success") mr-2"><i class="fa @(yesterdayHumid > globals.Humidity ? "fa-arrow-down" : "fa-arrow-up")"></i>@Math.Abs(yesterdayHumid - globals.Humidity).ToString("##0.0") %</span>
                                <span class="text-nowrap">@(yesterdayHumid > globals.Humidity ? "less humid" : "more humid") than yesterday</span>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-lg-6">
                    <div class="card card-stats mb-4 mb-xl-0">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <h5 class="card-title text-uppercase text-muted mb-0">Outside</h5>
                                    <span class="h2 font-weight-bold mb-0">
                                        @if (globals.OutsideTempF.HasValue)
                                        {
                                            @globals.OutsideTempF.Value.ToString("##0.0")
                                            <span>&#176;F </span>
                                            <span class="float-right" style="margin-right: 12px;">
                                                @globals.OutsideTempC.Value.ToString("##0.00")
                                                <span>&#176;C </span>
                                            </span>
                                        }
                                        else
                                        {
                                            <span>Please regsiter API</span>
                                        }
                                    </span>
                                </div>
                                <div class="col-auto">
                                    <div class="icon-shape">
                                        <img src="@Url.Content("~/img/" + globals.WeatherIcon + ".svg")" class="weather-icon" />
                                    </div>
                                </div>
                            </div>
                            <p class="mt-3 mb-0 text-muted text-sm">
                                <span class="mr-2">Hmdty: @(globals.OutsideHumidity.HasValue ? globals.OutsideHumidity.Value.ToString("##0") + "%" : "? %")</span>
                                <span class="text-nowrap">
                                    &nbsp;@if (globals.OutsideHumidity.HasValue)
                                    {
                                        @globals.WindSpeed.Value.ToString("##0.00")<span> Mph</span>
                                        <span class="float-right"> @globals.CloudCoverage.Value.ToString("##0")<span>% Clouds</span></span>
                                    }
                                </span>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-lg-6">
                    <div class="card card-stats mb-4 mb-xl-0">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <h5 class="card-title text-uppercase text-muted mb-0">Power</h5>
                                    <span class="h2 font-weight-bold mb-0">@string.Join(", ",globals.Relays.Select(t => t.Letter.ToString() + " > " + t.CurrentState.ToString()))</span>
                                </div>
                                <div class="col-auto">
                                    <div class="icon icon-shape bg-info text-white rounded-circle shadow">
                                        <i class="fas fa-plug"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<input id="systemDateTime" type="hidden" value="@DateTime.Now.ToShortDateString() @DateTime.Now.ToString("hh:mm:ss t")M"/>
<input id="systemStatusField" type="hidden" value="@globals.SystemOnline.ToString()" />