@using AquaMonitor.Data.Models
@using AquaMonitor.Web.Global
@model AquaMonitor.Data.Models.IGlobalState
@{
    ViewData["Title"] = "Settings";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<div class="settings">
    <div class="row">
        <div class="col-md-5 mb-4 mb-md-0">
            <div class="card shadow">
                <div class="card-header border-0">
                    <div class="row align-items-center">
                        <div class="col-8">
                            <h3 class="mb-0">Systems</h3>
                            <div class="hidden alert-relay-success alert alert-success alert-dismissible fade show float-md-none" role="alert">
                                <i class="fas fa-bell"></i>&nbsp;Relay updated!
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                            <div class="hidden alert-relay-fail alert alert-danger alert-dismissible fade show float-md-none " role="alert">
                                <i class="fas fa-exclamation-triangle"></i>&nbsp;Failed to update Relay
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <!-- Projects table -->
                    <table class="table align-items-center table-flush">
                        <thead class="thead-light">
                            <tr>
                                <th scope="col">System</th>
                                <th scope="col">Status</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <span>Automation</span>
                                </td>
                                <td>
                                    <span id="SystemOnline">@(Model.SystemOnline == true ? "Online" : "Offline")</span>
                                </td>
                                <td>
                                    <button id="SystemStateOn" class="btn btn-sm" name="SystemStateOn" @(Model.SystemOnline == true ? "disabled" : "")>On</button>
                                    <button id="SystemStateOff" class="btn btn-sm" name="SystemStateOff" @(Model.SystemOnline == false ? "disabled" : "")>Off</button>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" style="text-align: center;">
                                    <img src="@Url.Content("~/css/FishGraphic.png")" />
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-md-5 mb-4 mb-md-0">
            <div class="card shadow">
                <div class="card-header border-0">
                    <div class="row align-items-center">
                        <div class="col-8">
                            <h3 class="mb-0">Settings</h3>
                            <div id="settingsSuccess" class="hidden alert-relay-success alert alert-success alert-dismissible fade show float-md-none" role="alert">
                                <i class="fas fa-bell"></i>&nbsp;Settings updated!
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                            <div id="settingsAlert" class="hidden alert-relay-fail alert alert-danger alert-dismissible fade show float-md-none " role="alert">
                                <i class="fas fa-exclamation-triangle"></i>&nbsp;Settings failed to update
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                        </div>
                        <div class="col text-right">
                            <a id="SaveSettings" href="#!" class="btn btn-sm btn-primary">Save</a>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <!-- Projects table -->
                    <form id="settingsForm">
                        <table class="table align-items-center table-flush">
                            <thead class="thead-light">
                                <tr>
                                    <th scope="col">Setting</th>
                                    <th scope="col">Value</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th scope="row">
                                        <span>Temp Pin</span>
                                    </th>
                                    <td class="long">
                                        <input type="text" id="TempPin" class="form-control" name="TempPin" Title="Default is 4" placeholder="Temperature Pin" value="@Model.TempPin">
                                    </td>
                                </tr>
                                <tr>
                                    <th scope="row">
                                        <span>Temp Type</span>
                                    </th>
                                    <td class="long">
                                        <input class="form-control" value="@Model.TempType" id="TempType" name="TempType" placeholder="Temp Type" Title="11 or 22" />
                                    </td>
                                </tr>
                                <tr>
                                    <th scope="row">
                                        <span>Log Interval</span>
                                    </th>
                                    <td class="long">
                                        <input class="form-control" value="@Model.DataCollectionRate" id="DataCollectionRate" name="DataCollectionRate" placeholder="Log Interval" Title="Default is 60 seconds" />
                                    </td>
                                </tr>
                                <tr>
                                    <th scope="row">
                                        <span>Country Code</span>
                                    </th>
                                    <td class="long">
                                        <input class="form-control" value="@Model.Country" id="Country" name="Country" placeholder="Country Code" Title="US,CA" />
                                    </td>
                                </tr>
                                <tr>
                                    <th scope="row">
                                        <span>Zip Code</span>
                                    </th>
                                    <td class="long">
                                        <input class="form-control" value="@Model.Zipcode" id="Zipcode" name="Zipcode" placeholder="Zip Code" Title="5 digit zip code" />
                                    </td>
                                </tr>
                                <tr>
                                    <th scope="row">
                                        <span>Weather API Key</span>
                                    </th>
                                    <td class="long">
                                        <input class="form-control" value="@Model.APIKey" id="APIKey" name="APIKey" placeholder="API Key" Title="API Key - you must register and request a weather API key from openweathermap.org" />
                                    </td>
                                </tr>
                                <tr>
                                    <th scope="row">
                                        <span>Temp Offset</span>
                                    </th>
                                    <td class="long">
                                        <input class="form-control" value="@(Model.More.TempOffset ?? 0f)" id="More_TempOffset" placeholder="Temp Offset" name="More_TempOffset" Title="Temperature offset (in F) negative or positive number" />
                                    </td>
                                </tr>
                                <tr>
                                    <th scope="row">
                                        <span>Camera URL</span>
                                    </th>
                                    <td class="long">
                                        <input class="form-control" value="@(Model.More.CameraJPGUrl)" id="More_CameraJPGUrl" placeholder="Camera URL" name="More_CameraJPGUrl" Title="Camera URL to fetch JPG" />
                                    </td>
                                </tr>
                                <tr>
                                    <th scope="row">
                                        <span>Water Temp Probe</span>
                                    </th>
                                    <td class="long">
                                        <input type="checkbox" class="form-control" value="@(Model.More.WaterSensorEnabled)" id="More_WaterSensorEnabled" placeholder="WaterSensor" name="More_CameraJPGUrl" Title="Water Sensor Enabled" @(Model.More.WaterSensorEnabled == true ? "checked" : "") />
                                    </td>
                                </tr>
                                @if (Model.More.FoodSessions != null && Model.More.FoodSessions.Any())
                                {
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding Pins</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="@(Model.More.FoodSessions.First().PinCollection)" id="More_FeedingPins" placeholder="13, .5, 400, 900, 1900" name="More_FeedingPins" Title="Primary Pin Setup (pin, cycle, hz, forward, stop)" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #1</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="@(Model.More.FoodSessions.First().StartTime)" id="More_Feed1_Start" placeholder="6:00" name="More_Feed1_Start" Title="Start Feeding Time" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #1 Run</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="@(Model.More.FoodSessions.First().TurnTime),@(Model.More.FoodSessions.First().PinCollection.Split(',')[0])" id="More_Feed1_Turn" placeholder="200" name="More_Feed1_Turn" Title="Turn time in Seconds, Pin" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #2</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="@(Model.More.FoodSessions.Skip(1).First().StartTime)" id="More_Feed2_Start" placeholder="9:00" name="More_Feed2_Start" Title="Start Feeding Time" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #2 Run</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="@(Model.More.FoodSessions.Skip(1).First().TurnTime),@(Model.More.FoodSessions.Skip(1).First().PinCollection.Split(',')[0])" id="More_Feed2_Turn" placeholder="200" name="More_Feed2_Turn" Title="Turn time in Seconds, Pin" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #3</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="@(Model.More.FoodSessions.Skip(2).First().StartTime)" id="More_Feed3_Start" placeholder="0:00" name="More_Feed3_Start" Title="Start Feeding Time" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #3 Run</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="@(Model.More.FoodSessions.Skip(2).First().TurnTime),@(Model.More.FoodSessions.Skip(2).First().PinCollection.Split(',')[0])" id="More_Feed3_Turn" placeholder="200" name="More_Feed3_Turn" Title="Turn time in Seconds, Pin" />
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding Pins</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="" id="More_FeedingPins" placeholder="7, 11, 13, 15" name="More_FeedingPins" Title="GPIO Pins (In1 - In4)" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #1</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="" id="More_Feed1_Start" placeholder="6:00" name="More_Feed1_Start" Title="Start Feeding Time" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #1 Run</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="" id="More_Feed1_Turn" placeholder="200" name="More_Feed1_Turn" Title="Turn time in Seconds" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #2</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="" id="More_Feed2_Start" placeholder="9:00" name="More_Feed2_Start" Title="Start Feeding Time" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #2 Run</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="" id="More_Feed2_Turn" placeholder="200" name="More_Feed2_Turn" Title="Turn time in Seconds" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #3</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="" id="More_Feed3_Start" placeholder="0:00" name="More_Feed3_Start" Title="Start Feeding Time" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <span>Feeding #3 Run</span>
                                        </th>
                                        <td class="long">
                                            <input class="form-control" value="" id="More_Feed3_Turn" placeholder="200" name="More_Feed3_Turn" Title="Turn time in Seconds" />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-8 mb-4 mb-md-0">
            <div class="card shadow">
                <div class="card-header border-0">
                    <div class="row align-items-center">
                        <div class="col-8">
                            <h3 class="mb-0">Relays</h3>
                            <div id="relaySuccess" class="hidden alert-relay-success alert alert-success alert-dismissible fade show float-md-none" role="alert">
                                <i class="fas fa-bell"></i>&nbsp;Relay updated!
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                            <div id="relayAlert" class="hidden alert-relay-fail alert alert-danger alert-dismissible fade show float-md-none " role="alert">
                                <i class="fas fa-exclamation-triangle"></i>&nbsp;Failed to update Relay
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                        </div>
                        <div class="col text-right">
                            <a id="AddRelay" href="#!" class="btn btn-sm btn-success">Add Relay</a>
                            <a id="SaveRelays" href="#!" class="btn btn-sm btn-primary">Save</a>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <!-- Projects table -->
                    <form id="relayForm">
                        <table class="table align-items-center table-flush relaytable">
                                @foreach (var relay in Model.Relays)
                                {
                                    <tr>
                                        <td style="border-top: 1px solid #ccc;">
                                            <h4>Relay #@relay.Id.ToString() @relay.Letter
                                                <button class="deleteRelay btn btn-sm btn-warning" data-id="@relay.Id.ToString()" data-letter="@relay.Letter">Remove</button>
                                                </h4>
                                            <div class="form-group">
                                                <span><label class="form-control-label">Name</label><input class="form-control" id="Name[@relay.Id]" value="@relay.Name"/></span>
                                                <span><label class="form-control-label">Pin</label><input class="form-control" id="Pin[@relay.Id]" value="@relay.Pin"/></span>
                                                <span><label class="form-control-label">Interval</label><input class="form-control" id="Interval[@relay.Id]" value="@relay.Interval"/></span>
                                                <span><label class="form-control-label">RunTime</label><input class="form-control" id="IntervalRun[@relay.Id]" value="@relay.IntervalRun"/></span>
                                            </div>
                                            <div class="form-group">
                                                <span><label class="form-control-label">Start</label><input class="form-control starttime" id="Start[@relay.Id]" value="@(relay.Start.HasValue ? relay.Start.Value.ToString("g") : "")"/></span>
                                                <span><label class="form-control-label">Stop</label><input class="form-control stoptime" id="Stop[@relay.Id]" value="@(relay.Stop.HasValue ? relay.Stop.Value.ToString("g") : "")"/></span>
                                                <div class="position: relative;">
                                                    <img data-url="@Url.RouteUrl("defaultApi", new {controller = "Sky"})" src="@Url.RouteUrl("defaultApi", new {controller = "Sky"})?start=@(relay.Start.HasValue ? relay.Start.Value.ToString("g") : "")&end=@(relay.Stop.HasValue ? relay.Stop.Value.ToString("g") : "")"/>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <span><label class="form-control-label">Min Temp</label><input class="form-control" id="MinTempF[@relay.Id]" value="@(relay.MinTempF.HasValue ? relay.MinTempF.Value.ToString("###0.00") : "")"/></span>
                                                <span><label class="form-control-label">Max Temp</label><input class="form-control" id="MaxTempF[@relay.Id]" value="@(relay.MaxTempF.HasValue ? relay.MaxTempF.Value.ToString("###0.00") : "")"/></span>
                                                <span><label class="form-control-label">Variance</label><input class="form-control" id="TempVariance[@relay.Id]" value="@(relay.TempVariance.HasValue ? relay.TempVariance.Value.ToString("###0.00") : "")"/></span>
                                                <span><label class="form-control-label">Min OutTemp</label><input class="form-control" id="MinOutTempF[@relay.Id]" value="@(relay.MinOutTempF.HasValue ? relay.MinOutTempF.Value.ToString("###0.00") : "")"/></span>
                                                <span><label class="form-control-label">Max OutTemp</label><input class="form-control" id="MaxOutTempF[@relay.Id]" value="@(relay.MaxOutTempF.HasValue ? relay.MaxOutTempF.Value.ToString("###0.00") : "")"/></span>
                                            </div>
                                            <div class="form-group">
                                                <span><label class="form-control-label">WaterID</label><input class="form-control" id="WaterId[@relay.Id]" value="@(relay.WaterId.HasValue ? relay.WaterId.Value.ToString() : "")"/></span>
                                                <span><label class="form-control-label">Water Must Be High</label><input class="form-control" id="OnWhenFloatHigh[@relay.Id]" value="@(relay.OnWhenFloatHigh ? "Yes" : "No")"/></span>
                                            </div>
                                        </td>
                                    </tr>

                                }
                        </table>
                    </form>
                </div>
            </div>
        </div>



        <div class="col-md-4 mb-4 mb-md-0">
            <div class="card shadow">
                <div class="card-header border-0">
                    <div class="row align-items-center">
                        <div class="col-4">
                            <h3 class="mb-0">Water Levels</h3>
                            <div id="waterSuccess" class="hidden alert-relay-success alert alert-success alert-dismissible fade show float-md-none" role="alert">
                                <i class="fas fa-bell"></i>&nbsp;Water Levels updated!
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                            <div id="waterAlert" class="hidden alert-relay-fail alert alert-danger alert-dismissible fade show float-md-none " role="alert">
                                <i class="fas fa-exclamation-triangle"></i>&nbsp;Failed to update Water Levels
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                        </div>
                        <div class="col text-right">
                            <a id="AddWater" href="#!" class="btn btn-sm btn-success">Add Relay</a>
                            <a id="SaveWater" href="#!" class="btn btn-sm btn-primary">Save</a>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <!-- Projects table -->
                    <form id="waterForm">
                        <table class="table align-items-center table-flush">
                            <thead class="thead-light">
                                <tr>
                                    <th scope="col">Setting</th>
                                    <th scope="col">Value</th>
                                </tr>
                            </thead>
                            <tbody class="water-list">
                                @foreach (var water in Model.WaterLevels)
                                {
                                    <tr>
                                        <th scope="row">
                                            <span>WaterLevel #@water.Id.ToString()</span>
                                            <br />
                                            <button class="deleteWater btn btn-sm btn-warning" data-id="@water.Id.ToString()">Remove</button>
                                        </th>
                                        <td class="long">
                                            <label class="form-control-label">Name: </label><span><input class="form-control"  id="Name[@water.Id]" value="@water.Name" /></span><br />
                                            <label class="form-control-label">Pin: </label><span><input class="form-control"  id="Pin[@water.Id]" value="@water.Pin" /></span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
$(document).ready(function() {
    console.log("ready!");

    // B Relay
    $('#SystemStateOn').click(function (e) {
        e.preventDefault();
        $.ajax({
                type: 'POST',
                url: "@Url.RouteUrl("defaultApi", new {controller = "system"})",
                data: JSON.stringify({ state: "on" }),
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                headers: {
                    'RequestVerificationToken': '@GetAntiXsrfRequestToken()'
                }
            })
            .done(function(msg) {
                if (msg.success) {
                    $('#SystemOnline').html('Online');
                    $('#SystemStateOn').prop('disabled', true);
                    $('#SystemStateOff').prop('disabled', false);
                } else {
                    alert("Service Error: " + msg.message);
                }
            });
    });

    $('#SystemStateOff').click(function (e) {
        e.preventDefault();
        $.ajax({
                type: 'POST',
                url: "@Url.RouteUrl("defaultApi", new {controller = "system"})",
                data: JSON.stringify({ state: "off" }),
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                headers: {
                    'RequestVerificationToken': '@GetAntiXsrfRequestToken()'
                }
            })
            .done(function(msg) {
                if (msg.success) {
                    $('#SystemOnline').html('Offline');
                    $('#SystemStateOn').prop('disabled', false);
                    $('#SystemStateOff').prop('disabled', true);
                } else {
                    alert("Service Error: " + msg.message);
                }
            });
    });

    $('#SaveSettings').click(function (e) {
        e.preventDefault();
        $('#SaveSettings').prop('disabled', true);
        $.ajax({
                type: 'POST',
                url: "@Url.RouteUrl("defaultApi", new {controller = "settings"})",
                data: JSON.stringify({
                    TempPin: $('#TempPin').val(),
                    TempType: $('#TempType').val(),
                    DataCollectionRate: parseInt($('#DataCollectionRate').val()),
                    APIKey: $('#APIKey').val(),
                    Country: $('#Country').val(),
                    Zipcode: $('#Zipcode').val(),
                    More_TempOffset: parseInt($('#More_TempOffset').val()),
                    More_CameraJPGUrl: $('#More_CameraJPGUrl').val(),
                    More_WaterSensorEnabled: $('#More_WaterSensorEnabled')[0].checked,
                    More_FeedingPins: $('#More_FeedingPins').val(),
                    More_Feed1_Start: $('#More_Feed1_Start').val(),
                    More_Feed1_Turn: $('#More_Feed1_Turn').val(),
                    More_Feed2_Start: $('#More_Feed2_Start').val(),
                    More_Feed2_Turn: $('#More_Feed2_Turn').val(),
                    More_Feed3_Start: $('#More_Feed3_Start').val(),
                    More_Feed3_Turn: $('#More_Feed3_Turn').val()
                }),
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                headers: {
                    'RequestVerificationToken': '@GetAntiXsrfRequestToken()'
                }
            })
            .done(function(msg) {
                $('#SaveSettings').prop('disabled', false);
                if (msg.success) {
                    $('#settingsSuccess').removeClass('hidden');
                    setTimeout("$('#settingsSuccess').addClass('hidden', {duration:1000});",
                        5000); // hide the notice in 8 seconds
                } else {
                    $('#settingsAlert').removeClass('hidden');
                    setTimeout("$('#settingsAlert').addClass('hidden', {duration:1000});",
                        8000); // hide the notice in 8 seconds
                }
            });
    });

    $('#SaveRelays').click(function (e) {
        e.preventDefault();
        $('#SaveRelays').prop('disabled', true);
        setTimeout("$('#SaveRelays').prop('disabled', false);", 1000);
        // build json based on the data
        var data = { relays: []};
        $('#relayForm').find('.deleteRelay').each(function (index) {
            var dataTree = $(this).parent().parent();
            var Id = $(this).attr('data-id');
            var letter = $(this).attr('data-letter');
            data.relays[index] = {
                Id: parseInt($(this).attr('data-id')),
                Letter: (letter == 'A' ? 0 : letter == 'B' ? 1 : letter == 'C' ? 2 : 3),
                Name: dataTree.find('#Name\\[' + Id + '\\]').val(),
                Interval: parseInt(dataTree.find('#Interval\\[' + Id + '\\]').val()),
                IntervalRun: parseInt(dataTree.find('#IntervalRun\\[' + Id + '\\]').val()),
                Start: dataTree.find('#Start\\[' + Id + '\\]').val(),
                Stop: dataTree.find('#Stop\\[' + Id + '\\]').val(),
                MinTempF: (dataTree.find('#MinTempF\\[' + Id + '\\]').val() == "" ? null : parseFloat(dataTree.find('#MinTempF\\[' + Id + '\\]').val())),
                MaxTempF: (dataTree.find('#MaxTempF\\[' + Id + '\\]').val() == "" ? null : parseFloat(dataTree.find('#MaxTempF\\[' + Id + '\\]').val())),
                MinOutTempF: (dataTree.find('#MinOutTempF\\[' + Id + '\\]').val() == "" ? null : parseFloat(dataTree.find('#MinOutTempF\\[' + Id + '\\]').val())),
                MaxOutTempF: (dataTree.find('#MaxOutTempF\\[' + Id + '\\]').val() == "" ? null : parseFloat(dataTree.find('#MaxOutTempF\\[' + Id + '\\]').val())),
                TempVariance: (dataTree.find('#TempVariance\\[' + Id + '\\]').val() == "" ? null : parseFloat(dataTree.find('#TempVariance\\[' + Id + '\\]').val())),
                WaterId: (dataTree.find('#WaterId\\[' + Id + '\\]').val() == "" ? null : parseInt(dataTree.find('#WaterId\\[' + Id + '\\]').val())),
                OnWhenFloatHigh: dataTree.find('#OnWhenFloatHigh\\[' + Id + '\\]').val() == "Yes" ? true : false,
                Pin: parseInt(dataTree.find('#Pin\\[' + Id + '\\]').val()),
            };
        });
        $.ajax({
                type: 'POST',
                url: "@Url.RouteUrl("defaultApi", new {controller = "relayconfig"})",
                data: JSON.stringify(data, (key, value) => { if (value !== null) return value }),
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                headers: {
                    'RequestVerificationToken': '@GetAntiXsrfRequestToken()'
                }
            })
            .done(function(msg) {
                if (msg.success) {
                    $('#relayForm img').each(function(e) {
                        var startt = $(this).parent().parent().find('.starttime').val();
                        var endt = $(this).parent().parent().find('.stoptime').val();
                        $(this).attr('src', $(this).data('url') + '?start=' + startt + '&end=' + endt);
                    });
                    $('#relaySuccess').removeClass('hidden');
                    setTimeout("$('#relaySuccess').addClass('hidden', {duration:1000});",
                        5000); // hide the notice in 8 seconds
                } else {
                    $('#relayAlert').removeClass('hidden');
                    setTimeout("$('#relayAlert').addClass('hidden', {duration:1000});",
                        8000); // hide the notice in 8 seconds
                }
            });
    });

$('#SaveWater').click(function (e) {
    e.preventDefault();
    $('#SaveWater').prop('disabled', true);
    setTimeout("$('#SaveWater').prop('disabled', false);", 1000);
    var data = { WaterLevels: []};
    $('#waterForm').find('.deleteWater').each(function (index) {
            var dataTree = $(this).parent().next();
            var Id = $(this).attr('data-id');
            data.WaterLevels[index] = {
                Id: parseInt($(this).attr('data-id')),
                Name: dataTree.find('#Name\\[' + Id + '\\]').val(),
                Pin: parseInt(dataTree.find('#Pin\\[' + Id + '\\]').val()),
            };
        });
        $.ajax({
                type: 'POST',
                url: "@Url.RouteUrl("defaultApi", new {controller = "waterconfig"})",
                data: JSON.stringify(data, (key, value) => { if (value !== null) return value }),
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                headers: {
                    'RequestVerificationToken': '@GetAntiXsrfRequestToken()'
                }
            })
            .done(function(msg) {
                if (msg.success) {
                    $('#waterSuccess').removeClass('hidden');
                    setTimeout("$('#waterSuccess').addClass('hidden', {duration:1000});",
                        5000); // hide the notice in 8 seconds
                } else {
                    $('#waterAlert').removeClass('hidden');
                    setTimeout("$('#waterAlert').addClass('hidden', {duration:1000});",
                        8000); // hide the notice in 8 seconds
                }
            });

    });

    $('#AddWater').click(function (e) {
        e.preventDefault();
        var Number = 1;
        $.each($('#waterForm').find('.deleteWater'), function (index, value) {
            console.log("Number:" + Number + " - index " + index + " detectedId " + $(value).attr('data-id'));
            if (parseInt($(value).attr('data-id')) >= Number) {
                Number = parseInt($(value).attr('data-id')) + 1;
            }
        });
        if (Number > 6) {
            alert('You cannot add anymore water sensors.');
            return true;
        }
        $('.water-list').append($('#waterTemplate').html().replace(/{{Number}}/g, Number.toString()));
        return true;
    });

    $('.settings').on('click',
        '.deleteWater',
        function(e) {
            e.preventDefault();
            $(this).parent().parent().hide(500, function () {
                $(this).remove();
            });
        });


    $('#AddRelay').click(function(e) {
        var Number = 1;
        var Letter = 'A';
        var Used = '';
        e.preventDefault();
        $('#relayForm').find('.deleteRelay').each(function(index) {
            if (parseInt($(this).attr('data-id')) >= Number)
                Number = parseInt($(this).attr('data-id')) + 1;
            Used += $(this).attr('data-letter');
        });
        if (Used.includes(Letter)) {
            // we need to find a free letter
            Letter = 'B';
            if (Used.includes(Letter)) {
                Letter = 'C';
                if (Used.includes(Letter)) {
                    Letter = 'D'
                    if (Used.includes(Letter)) {
                        alert('You cannot add anymore Relays');
                        return false;
                    }
                }
            }
        }
        $('.relaytable').append($('#relayTemplate').html().replace(/{{Number}}/g, Number.toString())
            .replace(/{{Letter}}/g, Letter));
        return false;
    });

    $('.settings').on('click',
        '.deleteRelay',
        function(e) {
            e.preventDefault();
            $(this).parent().parent().parent().hide(500, function () {
                $(this).remove();
            });
        });
});
    </script>
}


<template id="waterTemplate">
    <tr>
        <th scope="row">
            <span>WaterLevel #{{Number}}</span>
            <br />
            <button class="deleteWater btn btn-sm btn-warning" data-id="{{Number}}">Remove</button>
        </th>
        <td class="long">
            <label class="form-control-label">Name: </label><span><input class="form-control"  id="Name[{{Number}}]" value="New" /></span><br />
            <label class="form-control-label">Pin: </label><span><input class="form-control"  id="Pin[{{Number}}]" value="0" /></span>
        </td>
    </tr>
</template>
<template id="relayTemplate">
    <tr>
        <td style="border-top: 1px solid #ccc;">
            <h4>Relay #{{Number}} {{Letter}}
                <button class="deleteRelay btn btn-sm btn-warning" data-id="{{Number}}" data-letter="{{Letter}}">Remove</button>
                </h4>
            <div class="form-group">
                <span><label class="form-control-label">Name</label><input class="form-control" id="Name[{{Number}}]" value="New"/></span>
                <span><label class="form-control-label">Pin</label><input class="form-control" id="Pin[{{Number}}]" value="0"/></span>
                <span><label class="form-control-label">Interval</label><input class="form-control" id="Interval[{{Number}}]" value="0"/></span>
                <span><label class="form-control-label">RunTime</label><input class="form-control" id="IntervalRun[{{Number}}]" value="0"/></span>
            </div>
            <div class="form-group">
                <span><label class="form-control-label">Start</label><input class="form-control starttime" id="Start[{{Number}}]" value=""/></span>
                <span><label class="form-control-label">Stop</label><input class="form-control stoptime" id="Stop[{{Number}}]" value=""/></span>
                <div class="position: relative;">
                    <img data-url="@Url.RouteUrl("defaultApi", new {controller = "Sky"})" src="@Url.RouteUrl("defaultApi", new {controller = "Sky"})?start=&end="/>
                </div>
            </div>
            <div class="form-group">
                <span><label class="form-control-label">Min Temp</label><input class="form-control" id="MinTempF[{{Number}}]" value=""/></span>
                <span><label class="form-control-label">Max Temp</label><input class="form-control" id="MaxTempF[{{Number}}]" value=""/></span>
                <span><label class="form-control-label">Variance</label><input class="form-control" id="TempVariance[{{Number}}]" value=""/></span>
                <span><label class="form-control-label">Min OutTemp</label><input class="form-control" id="MinOutTempF[{{Number}}]" value=""/></span>
                <span><label class="form-control-label">Max OutTemp</label><input class="form-control" id="MaxOutTempF[{{Number}}]" value=""/></span>
            </div>
            <div class="form-group">
                <span><label class="form-control-label">WaterID</label><input class="form-control" id="WaterId[{{Number}}]" value=""/></span>
                <span><label class="form-control-label">Water Must Be High</label><input class="form-control" id="OnWhenFloatHigh[{{Number}}]" value="Yes"/></span>
            </div>
        </td>
    </tr>
</template>
